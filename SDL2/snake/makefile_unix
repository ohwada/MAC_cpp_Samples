#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -pedantic-errors -pedantic -Wextra -Wall -std=c99 `sdl2-config --cflags`
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = `sdl2-config --libs`

INC_LINUX_DEBUG = $(INC)
CFLAGS_LINUX_DEBUG = $(CFLAGS) -std=c99 -g -DDEBUG
RESINC_LINUX_DEBUG = $(RESINC)
RCFLAGS_LINUX_DEBUG = $(RCFLAGS)
LIBDIR_LINUX_DEBUG = $(LIBDIR)
LIB_LINUX_DEBUG = $(LIB)
LDFLAGS_LINUX_DEBUG = $(LDFLAGS) `sdl2-config --libs` -lSDL2_ttf -lm
OBJDIR_LINUX_DEBUG = obj/LinuxDebug
DEP_LINUX_DEBUG = 
OUT_LINUX_DEBUG = bin/LinuxDebug/RainbowSnake

INC_LINUX_RELEASE = $(INC)
CFLAGS_LINUX_RELEASE = $(CFLAGS) -O2
RESINC_LINUX_RELEASE = $(RESINC)
RCFLAGS_LINUX_RELEASE = $(RCFLAGS)
LIBDIR_LINUX_RELEASE = $(LIBDIR)
LIB_LINUX_RELEASE = $(LIB)
LDFLAGS_LINUX_RELEASE = $(LDFLAGS) -s
OBJDIR_LINUX_RELEASE = obj/LinuxRelease
DEP_LINUX_RELEASE = 
OUT_LINUX_RELEASE = bin/LinuxRelease/RainbowSnake

OBJ_LINUX_DEBUG = $(OBJDIR_LINUX_DEBUG)/src/board.o $(OBJDIR_LINUX_DEBUG)/src/game.o $(OBJDIR_LINUX_DEBUG)/src/globals.o $(OBJDIR_LINUX_DEBUG)/src/main.o $(OBJDIR_LINUX_DEBUG)/src/menu.o $(OBJDIR_LINUX_DEBUG)/src/renderer.o $(OBJDIR_LINUX_DEBUG)/src/snake.o

OBJ_LINUX_RELEASE = $(OBJDIR_LINUX_RELEASE)/src/board.o $(OBJDIR_LINUX_RELEASE)/src/game.o $(OBJDIR_LINUX_RELEASE)/src/globals.o $(OBJDIR_LINUX_RELEASE)/src/main.o $(OBJDIR_LINUX_RELEASE)/src/menu.o $(OBJDIR_LINUX_RELEASE)/src/renderer.o $(OBJDIR_LINUX_RELEASE)/src/snake.o

all: linux_debug linux_release

clean: clean_linux_debug clean_linux_release

before_linux_debug: 
	test -d bin/LinuxDebug || mkdir -p bin/LinuxDebug
	test -d $(OBJDIR_LINUX_DEBUG)/src || mkdir -p $(OBJDIR_LINUX_DEBUG)/src

after_linux_debug: 

linux_debug: before_linux_debug out_linux_debug after_linux_debug

out_linux_debug: before_linux_debug $(OBJ_LINUX_DEBUG) $(DEP_LINUX_DEBUG)
	$(LD) $(LIBDIR_LINUX_DEBUG) -o $(OUT_LINUX_DEBUG) $(OBJ_LINUX_DEBUG)  $(LDFLAGS_LINUX_DEBUG) $(LIB_LINUX_DEBUG)

$(OBJDIR_LINUX_DEBUG)/src/board.o: src/board.c
	$(CC) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c src/board.c -o $(OBJDIR_LINUX_DEBUG)/src/board.o

$(OBJDIR_LINUX_DEBUG)/src/game.o: src/game.c
	$(CC) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c src/game.c -o $(OBJDIR_LINUX_DEBUG)/src/game.o

$(OBJDIR_LINUX_DEBUG)/src/globals.o: src/globals.c
	$(CC) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c src/globals.c -o $(OBJDIR_LINUX_DEBUG)/src/globals.o

$(OBJDIR_LINUX_DEBUG)/src/main.o: src/main.c
	$(CC) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c src/main.c -o $(OBJDIR_LINUX_DEBUG)/src/main.o

$(OBJDIR_LINUX_DEBUG)/src/menu.o: src/menu.c
	$(CC) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c src/menu.c -o $(OBJDIR_LINUX_DEBUG)/src/menu.o

$(OBJDIR_LINUX_DEBUG)/src/renderer.o: src/renderer.c
	$(CC) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c src/renderer.c -o $(OBJDIR_LINUX_DEBUG)/src/renderer.o

$(OBJDIR_LINUX_DEBUG)/src/snake.o: src/snake.c
	$(CC) $(CFLAGS_LINUX_DEBUG) $(INC_LINUX_DEBUG) -c src/snake.c -o $(OBJDIR_LINUX_DEBUG)/src/snake.o

clean_linux_debug: 
	rm -f $(OBJ_LINUX_DEBUG) $(OUT_LINUX_DEBUG)
	rm -rf bin/LinuxDebug
	rm -rf $(OBJDIR_LINUX_DEBUG)/src

before_linux_release: 
	test -d bin/LinuxRelease || mkdir -p bin/LinuxRelease
	test -d $(OBJDIR_LINUX_RELEASE)/src || mkdir -p $(OBJDIR_LINUX_RELEASE)/src

after_linux_release: 

linux_release: before_linux_release out_linux_release after_linux_release

out_linux_release: before_linux_release $(OBJ_LINUX_RELEASE) $(DEP_LINUX_RELEASE)
	$(LD) $(LIBDIR_LINUX_RELEASE) -o $(OUT_LINUX_RELEASE) $(OBJ_LINUX_RELEASE)  $(LDFLAGS_LINUX_RELEASE) $(LIB_LINUX_RELEASE)

$(OBJDIR_LINUX_RELEASE)/src/board.o: src/board.c
	$(CC) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c src/board.c -o $(OBJDIR_LINUX_RELEASE)/src/board.o

$(OBJDIR_LINUX_RELEASE)/src/game.o: src/game.c
	$(CC) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c src/game.c -o $(OBJDIR_LINUX_RELEASE)/src/game.o

$(OBJDIR_LINUX_RELEASE)/src/globals.o: src/globals.c
	$(CC) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c src/globals.c -o $(OBJDIR_LINUX_RELEASE)/src/globals.o

$(OBJDIR_LINUX_RELEASE)/src/main.o: src/main.c
	$(CC) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c src/main.c -o $(OBJDIR_LINUX_RELEASE)/src/main.o

$(OBJDIR_LINUX_RELEASE)/src/menu.o: src/menu.c
	$(CC) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c src/menu.c -o $(OBJDIR_LINUX_RELEASE)/src/menu.o

$(OBJDIR_LINUX_RELEASE)/src/renderer.o: src/renderer.c
	$(CC) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c src/renderer.c -o $(OBJDIR_LINUX_RELEASE)/src/renderer.o

$(OBJDIR_LINUX_RELEASE)/src/snake.o: src/snake.c
	$(CC) $(CFLAGS_LINUX_RELEASE) $(INC_LINUX_RELEASE) -c src/snake.c -o $(OBJDIR_LINUX_RELEASE)/src/snake.o

clean_linux_release: 
	rm -f $(OBJ_LINUX_RELEASE) $(OUT_LINUX_RELEASE)
	rm -rf bin/LinuxRelease
	rm -rf $(OBJDIR_LINUX_RELEASE)/src

.PHONY: before_linux_debug after_linux_debug clean_linux_debug before_linux_release after_linux_release clean_linux_release

