json parse from file: assets/sample1.json 

 test_parse_obj_to_string 

-- 	test_integer: 12345
-- 	test_double: 987.654321
-- 	test_string: "joys of programming"
-- 	test_boolean: true
-- 	test_array: [ "c", "c++", "d", "lisp" ]
-- 	test_object: { "test_integer": 54321, "test_double": 123456.789, "test_string": "hello world", "test_boolean": false, "test_array": [ "perl", "golang", "whitespace", "lua" ] }

 test_parse_check_type 

-- 	json_type_int -> 	test_integer: 12345
-- 		value: 12345
-- 	json_type_double -> 	test_double: 987.654321
-- 		value: 987.654321
-- 	json_type_object -> 	test_string: "joys of programming"
-- 		value: joys of programming
-- 	json_type_boolean -> 	test_boolean: true
-- 		value: true
-- 	json_type_array -> 	test_array: [ "c", "c++", "d", "lisp" ]
-- 		value: [0]="c"
-- 		value: [1]="c++"
-- 		value: [2]="d"
-- 		value: [3]="lisp"
-- 	json_type_object -> 	test_object: { "test_integer": 54321, "test_double": 123456.789, "test_string": "hello world", "test_boolean": false, "test_array": [ "perl", "golang", "whitespace", "lua" ] }

 >>> START object 

 test_parse_check_type 

-- 	json_type_int -> 	test_integer: 54321
-- 		value: 54321
-- 	json_type_double -> 	test_double: 123456.789
-- 		value: 123456.789000
-- 	json_type_object -> 	test_string: "hello world"
-- 		value: hello world
-- 	json_type_boolean -> 	test_boolean: false
-- 		value: false
-- 	json_type_array -> 	test_array: [ "perl", "golang", "whitespace", "lua" ]
-- 		value: [0]="perl"
-- 		value: [1]="golang"
-- 		value: [2]="whitespace"
-- 		value: [3]="lua"
<<< END object 

